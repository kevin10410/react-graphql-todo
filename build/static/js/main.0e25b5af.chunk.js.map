{"version":3,"sources":["components/Form.js","components/Todo.js","components/FilterButton.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","onSubmit","e","preventDefault","addTaskHandler","className","htmlFor","id","type","name","autoComplete","value","onChange","inputChangeHandler","target","Todo","useState","newName","setNewName","isEditing","setEditing","editingTemplate","updateTask","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","FilterButton","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","console","log","App","setName","filter","tasks","setTasks","remainingTasksNumber","length","updateEditedTask","editedTaskList","map","updatedTasks","nanoid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e25b5af.chunk.js","sourcesContent":["const Form = props => {\n\n  const submitHandler = e => {\n    e.preventDefault();\n    props.addTaskHandler();\n  };\n\n  const inputChanged = e => {\n    props.inputChangeHandler(e.target.value)\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input className=\"input input__lg\"\n        id=\"new-todo-input\"\n        type=\"text\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={props.name}\n        onChange={inputChanged}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import { useState } from 'react';\n\nconst Todo = props => {\n  const [newName, setNewName] = useState('');\n  const [isEditing, setEditing] = useState(false);\n\n  const cancelEdit = () => {\n    setNewName('');\n    setEditing(false);\n  };\n\n  const submitNewName = e => {\n    e.preventDefault();\n    props.updateTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  };\n\n  const editingTemplate = (\n    <form className=\"stack-small\"\n      onSubmit={submitNewName}\n    >\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input className=\"todo-text\"\n          type=\"text\"\n          id={props.id}\n          value={newName}\n          onChange={e => { setNewName(e.target.value) }}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button className=\"btn todo-cancel\"\n          type=\"button\"\n          onClick={cancelEdit}\n        >\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n          <button className=\"btn\"\n            type=\"button\" \n            onClick={() => setEditing(true)}\n          >\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n    </div>\n  );\n\n  return (\n    <li className=\"todo stack-small\">\n      { isEditing ? editingTemplate : viewTemplate }\n    </li>\n  );\n};\n\nexport default Todo;\n","\nconst FilterButton = props => {\n  return(\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n};\n\nexport default FilterButton;\n","import { nanoid } from \"nanoid\";\nimport { useState } from 'react';\nimport From from './components/Form';\nimport Todo from './components/Todo';\nimport FilterButton from './components/FilterButton';\nimport './App.css';\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nconsole.log(FILTER_NAMES);\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [filter, setFilter] = useState('All');\n\n  const [tasks, setTasks] = useState([\n    { id: \"todo-0\", name: \"Eat\", completed: true },\n    { id: \"todo-1\", name: \"Sleep\", completed: false },\n    { id: \"todo-2\", name: \"Repeat\", completed: false },\n  ]);\n\n  const remainingTasksNumber = tasks\n    .filter(({ completed }) => completed === false)\n    .length;\n\n  const addTaskHandler = () => {\n    setTasks([\n      ...tasks,\n      { id: \"todo-\" + nanoid(), name: name, completed: false }\n    ]);\n    setName('');\n  };\n\n  const inputChangeHandler = value => {\n    setName(value);\n  };\n\n  const deleteTask = id => {\n    setTasks(tasks => tasks.filter(task => id !== task.id));\n  };\n\n  const updateEditedTask = (id, newName) => {\n    const editedTaskList = tasks.map(task => {\n      return id === task.id\n        ? {...task, name: newName}\n        : task;\n    });\n\n    setTasks(editedTaskList);\n  }\n\n  const toggleTaskCompleted = id => {\n    const updatedTasks = tasks.map(task => {\n      return id === task.id\n        ? { ...task, completed: !task.completed }\n        : task\n    });\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>React GraphQL Todo</h1>\n      <From\n        name={name}\n        addTaskHandler={addTaskHandler}\n        inputChangeHandler={inputChangeHandler}\n      />\n      <div className=\"filters btn-group stack-exception\">\n        { \n          FILTER_NAMES.map(name =>\n            <FilterButton\n              key={name}\n              name={name}\n              isPressed={name === filter}\n              setFilter={setFilter}\n            />\n          )\n        }\n      </div>\n      <h2 id=\"list-heading\">\n        { remainingTasksNumber } tasks remaining\n      </h2>\n      <ul className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {\n          tasks\n            .filter(FILTER_MAP[filter])\n            .map(task =>\n              <Todo\n                id={task.id}\n                key={task.id}\n                name={task.name}\n                completed={task.completed}\n                deleteTask={deleteTask}\n                updateTask={updateEditedTask}\n                toggleTaskCompleted={toggleTaskCompleted}\n              />\n          )\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}